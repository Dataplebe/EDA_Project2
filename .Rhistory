lines(df$Date, df$Sub_metering_2, col = "red")
lines(df$Date, df$Sub_metering_3, col = "blue")
legend("topright", legend = names(df[6:8]), lwd = 1, col = c("black", "red", "blue"), bty="n")
plot(df$Date, df$Global_reactive_power, lwd=2, type = "l", xlab="datetime", ylab="Global_reactive_power")
dev.off()
plot
plot(x,y)
hist()
hist(x)
hist(df)
hist(df$Date)
hist(table(df$Date))
table(df$Date)
df$Date
names(df)
plot(df$Date, df$Global_active_power)
par()
par.new()
?par
par(new=TRUE)
plot(df$Date, df$Global_active_power)
plot(df$Date, df$Global_active_power)
ddv()
dev.cur()
png(filename="plot4.png")
dev.cur()
dev.cur() <- 2
?dev.cur()
par(mfrows=c(1,1))
par(mfrow=c(1,1))
plot(df$Date, df$Global_active_power)
plot(df$Date, df$Global_active_power)
plot(df$Date, df$Global_active_power)
png(filename = "plot4.png")
par(mfrow = c(2,2), mar=c(4, 4, 2, 1))
plot(df$Date, df$Global_active_power, type="l", xlab = NA, ylab = "Global Active Power", lwd = 2)
plot(df$Date, df$Voltage, type="l", xlab="datetime", ylab="Voltage", lwd=2)
plot(df$Date, df$Sub_metering_1, type = "n", ylab = "Energy sub metering", xlab = NA)
lines(df$Date, df$Sub_metering_1)
lines(df$Date, df$Sub_metering_2, col = "red")
lines(df$Date, df$Sub_metering_3, col = "blue")
legend("topright", legend = names(df[6:8]), lwd = 1, col = c("black", "red", "blue"), bty="n")
plot(df$Date, df$Global_reactive_power, lwd=2, type = "l", xlab="datetime", ylab="Global_reactive_power")
dev.off()
class(df$Date)
plot(df$Date, df$Global_active_power, type = "l")
swirl()
library(swirl)
swirl()
install.packages("fields")
install.packages(c("bindrcpp", "checkmate", "curl", "DBI", "dplyr", "evaluate", "foreign", "Formula", "glue", "htmlwidgets", "httpuv", "R6", "Rcpp", "RMySQL", "RSQLite", "sqldf", "TTR", "XML", "xts"))
swirl()
library(swirl)
swirl()
library(fields)
install.packages("fields")
library(fields)
install.packages("spam")
library(fields)
library(spam)
install.packages("spam")
library(spam)
librayr(fields)
library(fields)
swirl()
dim(ssd)
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, as.bool(subject = 1))
sub1 <- subset(ssd, as.boolean(subject = 1))
sub1 <- subset(ssd, subject = 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[1:3])
sub1[1:3]
sub1[,1:3]
mdist <- dist(sub[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
play()
head(sub1)
class[sub1[10:12]]
class[sub[10]]
class[sub1[10]]
sub1
sub1[1]
sub1[10]
class[sub1[1]]
dim[sub1[10:12]]
str[sub[10:12]]
class[sub1[,1]]
str[sub[,10:12]]
x <- sub[10:12]
nxt()
hclustering <- hclust(mdist)
mplclust(hclustering, lab.col=unclass(sub1$activity))
play()
unclass(sub1$activity)
sub1$activity
nxt()
myplclust(hclustering, lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub[,-c(562,563)]))
?scale
svd1 <- svd(scale(sub1[,-c(562,563)]))
play()
class(sub1[10])
class(sub1[,10])
class(sub1[10:12])
class(sub1[,10:12])
lapply(sub1[,10:12], class)
lapply(sub1[10:12], class)
class(sub1[10])
str(sub1[10:12])
str(sub1[,10:12])
dim(sub1[,10:12])
dim(sub1[10:12])
nxt()
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
play()
maxCon
svd1$v[,2]
?which.max
nxt()
mdist <- dist(c(sub1[,10:12], maxCon)
)
?dist
mdist <- dist(c(sub1[10:12], maxCon))
mdist <- dist(c(sub1[,10:12], maxCon))
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust(mdist)
?hclust
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
dim(sub1)
kClust <- kmeans(sub1[, -c(562, 563)], center = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], center = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying, 1:12], pch = 19, ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kCllust$size == 49)
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown, 1:12], pch = 19, ylab="Walkdown Cluster")
library(swirl)
swirl()
play()
getwd()
dir()
getwd()
setwd("../Week 4"
_
setwd("../Week 4")
dir()
load("data/samsungData.rda")
nxt()
dim(pm0)
head(pm0)
info()
main()
dim(ssd)
names(ssd[562:563])
table(ssd$subject)
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mydist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=uclass(sub1$activity))
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[c(10:12, maxCon)])
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity, nstart=100)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying, 1:12], pch=19, ylab="Laying Cluster")
names(sub1[1:3])
walkdown <- which(kClust$size ==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab="Walkdown Cluster")
exit()
info()
bye()
rm(list=ls())
swirl()
cnames
play()
ls9)
ls()
cnames
dim(my1999)
my1999
names(pm0)
names(pm1)
head(pm0)
nxt()
cnames <- strsplit(cnames, '|', fixed=TRUE)
cnams
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
play()
1304287*28/1024
1304287*28
36520036/8
456500/1024
28000000/8
28000000/1024
30000000/2^20
30000000/2^10
30000000/8
30000000/1024
1300000*28*8
291200000/1024
nxt()
summar(x1)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1<-
0
negative <- x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site1)
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date, "%Y%m%d"))
dates0 <- as.Date(as.character(pm0sub$Date) "%Y%m%d")
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch =20)
abline(h = median(x0sub, na.rm=T), lwd=2)
abline(h = median(x0sub, na.rm=TRUE), lwd=2)
plot(dates1, x1sub, pch =20)
abline(h = median(x1sub, na.rm=TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean=mn0)
d1 <- data.frame(state = names(mn1), mean=mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2, xlim=c(.5,2.5)]))
with(mrg, plot(rep(1,52), mrg[,2], xlim=c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
play()
with(mrg, points(rep(2, 52), mrg[,3], col = State))
head(mrg)
with(mrg, points(rep(2, 52), mrg[,3], col = state))
with(mrg, points(rep(2, 52), mrg[,3], col = state, alpha = .3))
with(mrg, points(rep(2, 52), mrg[,3], col = state, alpha = 1/3))
with(mrg, points(rep(1, 52), mrg[,2], col = state))
nxt()
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3], col = states)
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3], col = mrg$states)
play()
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3], col = mrg$states)
mrg$states
nxt()
mrg[mrg$mean.x < mrg$mean.y, ]
quit()
getwd()
getwd()
setwd("../Project 2")
getwd()
dir()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip", "FNEI_data.zip", method = "curl")
dir()
?unzip
unzip("FNEI_data.zip")
dir()
file.exists("FNEI_data.zip")
?del
?rm
file.remove("FNEI_data.zip")
dir()
?readRDS
sClass <- readRDS("Source_Classification_Code.rds")
dim(sClass)
head(sClass)
names(sClass)
dir()
pmdata <- readRDS("summarySCC_PM25.rds")
head(pmdata)
unique(sClass$Short.Name)
head(sClass)
table(pmdata$Pollutant)
table(pmdata$SCC)
head(sClass)
NEI <- pmdata
SCC <- sClass
rm(pmdata)
rm(sClass)
?summary
head(NEI)
tapply(NEI$Emissions, NEI$year, sum)
plot(tapply(NEI$Emissions, NEI$year, sum))
?log10
log10(7332967)
plot(tapply(NEI$Emissions, NEI$year, sum/1000))
plot(tapply(NEI$Emissions, NEI$year, sum()/1000))
plot(tapply(NEI$Emissions, NEI$year, sum)/1000)
plot(tapply(NEI$Emissions, NEI$year, sum))
plot(tapply(NEI$Emissions, NEI$year, sum), as.factor(NEI$year))
?plot
x <- tapply(NEI$Emissions, NEI$year, sum)
names(x)
plot(x, names(x))
plot(names(x), x)
plot(as.factor(NEI$year), tapply(NEI$Emissions, NEI$year, sum))
as.factor(NEI$year)
levels(NEI$year)
NEI$year
?levels
levels(NEI$year)
levels(as.factor(NEI$year)
)
class(NEI$year)
head(NEI
)
class(NEI[6])
NEI[6]
]
plot(levels(as.factor(NEI$year)), tapply(NEI$Emissions, NEI$year, sum))
x/1000
plot(names(x), x/1000, xlab="Year", ylab = "1000s of Tons of PM25")
?line
?lmd
line(x)
line(x[1], x[4])
?lm
x
?plt
?plot
lm(x)
line
?line
line(names(x), x)
line(as.numeric(names(x)), x)
?lm
lm(names(x) ~ x)
as.numeric(names(x))
lm(as.numeric(names(x)) ~ x)
line(lm(as.numeric(names(x)) ~ x))
line(lm(x
))
plot(lm(as.numeric(names(x)) ~ x))
plot(lm(as.numeric(names(x)) ~ x))
x
plot(as.numeric(names(x)), x/1000)
line(as.numer(names(x)), x/1000)
line(as.numeric(names(x)), x/1000)
line(x = 1)
line(x = 5500)
line(x = 5500, y = 2004)
?line
abline(line(as.numeric(names(x)), x/1000))
?abline
abline(lm(as.numeric(names(x)), x/1000))
?lm
plot(as.numeric(names(x)), x/1000, pch=19, line)
plot(as.numeric(names(x)), x/1000, pch=19)
lines(lm(as.numeric(names(x))~x/1000))
as.numeric(names(x))
x/100
x/1000
lines(lm(as.numeric(names(x))~x/1000), fitted(fit))
x$names <- as.numeric(names(x))
x
x <- tapply(NEI$Emissions, NEI$year, sum)
x
?mutate
x <- matrix(tapply(NEI$Emissions, NEI$year, sum), nrow=4, byrow=TRUE)
x
names(x)
x[2] <- c(1999, 2002, 2005, 2008)
x[,2] <- c(1999, 2002, 2005, 2008)
?bycol
col
?col
x <- tapply(NEI$Emissions, NEI$year, sum)
x
lm(c(1999, 2002, 2005, 2008) ~ x))
lm(c(1999, 2002, 2005, 2008) ~ x)
lines(lm(c(1999, 2002, 2005, 2008) ~ x))
lines(lm(c(1999, 2002, 2005, 2008) ~ x[,1]))
lines(lm(c(1999, 2002, 2005, 2008) ~ x[1,]))
x[1,]
x[,1]
x[1]
x
x[[1]]
class(x)
as.numeric9x
as.numeric(x)
lines(lm(c(1999, 2002, 2005, 2008) ~ as.numeric(x))
)
lines(lm(c(1999, 2002, 2005, 2008) ~ as.numeric(x)))
as.numeric(x)
?co
?col
col(x)
col(x[])
col(x[1])
x <- matrix(tapply(NEI$Emissions, NEI$year, sum), nrow=4)
x
lm(c(1999, 2002, 2005, 2008) ~ c(7332, 5635, 5454, 3464))
lines(fitted(lm(c(1999, 2002, 2005, 2008) ~ c(7332, 5635, 5454, 3464)))
)
lines(c(1999, 2002, 2005, 2008) ~ c(7332, 5635, 5454, 3464))
lines(c(1999, 2002, 2005, 2008),c(7332, 5635, 5454, 3464))
abline(lm(c(1999, 2002, 2005, 2008) ~ c(7332, 5635, 5454, 3464)))
plot((1999, 2002, 2005, 2008) ~ c(7332, 5635, 5454, 3464))
plot(c(1999, 2002, 2005, 2008) ~ c(7332, 5635, 5454, 3464))
plot(c(7332, 5635, 5454, 3464) ~ c(1999, 2002, 2005, 2008))
abline(lm(c(7332, 5635, 5454, 3464) ~ c(1999, 2002, 2005, 2008)))
x
head(NEI)
x <- tapply(NEI$Emissions, NEI$year, sum)
x
plot(names(x), x)
plot(names(x), x, pch = 19, col = "red", lwd=2)
plot(names(x), x, pch = 19, col = "red")
plot(names(x), x/1000, pch = 19, col = "red", main = "Emissions by Year", xlab = "Year", ylab = "Tons of PM2.5 (1000s)")
abline(lm(names(x)~x/1000))
abline(lm(as.numeric(names(x))~x/1000))
abline(lm(x/1000 ~ names(x)
)
)
abline(lm(x/1000 ~ as.numeric(names(x)))
)
plot(names(x), x/1000, type = "l", pch = 19, col = "red", main = "Emissions by Year", xlab = "Year", ylab = "Tons of PM2.5 (1000s)")
plot(names(x), x/1000, type = "l", col = "red", lwd = 2 main = "Emissions by Year", xlab = "Year", ylab = "Tons of PM2.5 (1000s)")
?lines
plot(names(x), x/1000, type = "l", col = "red", lwd = 2, main = "Emissions by Year", xlab = "Year", ylab = "Tons of PM2.5 (1000s)")
points(names(x), x/1000, pch=19)
?pg
?png
?par
rm(list=ls())
dir()
dev.off()
dev.off()
source('~/Desktop/Coursera/Exploratory Data Analysis/Project 2/plot1.R')
!file.exists("summarySCC_PM25.rds")
?if
source('~/Desktop/Coursera/Exploratory Data Analysis/Project 2/plot1.R')
source('~/Desktop/Coursera/Exploratory Data Analysis/Project 2/plot1.R')
exists(NEI)
dim(NEI)
source('~/Desktop/Coursera/Exploratory Data Analysis/Project 2/plot1.R')
rm(list =ls())
